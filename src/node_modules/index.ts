import {onMount, onDestroy} from "svelte";
import {goto} from '@sapper/app'
import * as messages from '../routes/_js/protos/time_pb.js'
import * as yup from 'yup';
import {AccountServiceClient, AdminServiceClient} from '../routes/_js/protos/time_grpc_web_pb.js'

import {CRUDBase} from './_formbase.ts';

const adminService = new AdminServiceClient('http://localhost:8090', null, null);
const accountService = new AccountServiceClient('http://localhost:8090', null, null);

import {Table, Th, Tr, Pagination} from '../routes/_components/svelte-table/src/index.js'
import ShowError from './ShowError.svelte'
import Add from './Add.svelte'
import {Form, Input, Select, Choice} from '../routes/_components/sveltejs-forms/index.js';
import TitleBar from './Title.svelte'
import {NotificationDisplay, notifier} from '../routes/_components/svelte-notifications/src/index.js'
import TdEdit from './TdEdit.svelte'
import TdDelete from './TdDelete.svelte'
import {time} from '../routes/_js/stores/time_store.js';
import Time from './Time.svelte'
import {Tabs, Tab, TabList, TabPanel} from '../routes/_components/svelte-tabs/src/index.js';

import {goBackOrNavigate, pPath, uPath, getCookieValue} from './functions.ts'

export const bc_home = {href: "", icon: 'mif-meter'};
import {writable} from "svelte/store";

export {
  onMount, onDestroy,
  messages,
  //AccountServiceClient,
  //AdminServiceClient,
  adminService,
  accountService,
  Table, Th, Tr, Pagination,
  ShowError,
  Add,
  goto,
  yup,
  Form, Input, Select, Choice,
  TitleBar,
  goBackOrNavigate, uPath, pPath, getCookieValue,
  NotificationDisplay, notifier,
  writable,

  CRUDBase,
  TdEdit,
  TdDelete,
  time,
  Time,
  Tabs, Tab, TabList, TabPanel
}
